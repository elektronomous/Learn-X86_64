     1                                  ; alise.asm
     2                                  bits 64             ; tell the assembler that this code is 64-bit
     3                                  
     4                                  section .data
     5 00000000 48656C6C6F2C20576F-         msg1        db  "Hello, World!",10,0        ; string with NL and 0
     5 00000009 726C64210A00       
     6                                      msg1Len     equ $-msg1-1                    ; measure the length, minus the 0
     7 0000000F 416C69766520616E64-         msg2        db  "Alive and Kicking!",10, 0  ; string with NL and 0
     7 00000018 204B69636B696E6721-
     7 00000021 0A00               
     8                                      msg2Len     equ $-msg2-1                    ; measure the length, minus the 0
     9                                  
    10 00000023 6501000000000000            radius      dq 357                          ; no string, not displayable?
    11 0000002B 1F85EB51B81E0940            pi          dq 3.14                         ; no string, not displayable?
    12                                  
    13                                  section .bss
    14                                  
    15                                  section .text
    16                                      global main
    17                                  main:
    18 00000000 B801000000                  mov     rax, 1          ; 1 = to write
    19 00000005 BF01000000                  mov     rdi, 1          ; 1 = to stdout
    20 0000000A 48BE-                       mov     rsi, msg1       ; string to display
    20 0000000C [0000000000000000] 
    21 00000014 BA0E000000                  mov     rdx, msg1Len    ; length of the string
    22 00000019 0F05                        syscall                 ; display the string
    23                                  
    24 0000001B B801000000                  mov     rax, 1          ; 1 = to write
    25 00000020 BF01000000                  mov     rdi, 1          ; 1 = to stdout
    26 00000025 48BE-                       mov     rsi, msg2       ; string to display
    26 00000027 [0F00000000000000] 
    27 0000002F BA13000000                  mov     rdx, msg2Len    ; length of the string
    28 00000034 0F05                        syscall                 ; display the string
    29                                  
    30 00000036 B83C000000                  mov     rax, 60         ; 60 = exit
    31 0000003B BF00000000                  mov     rdi, 0          ; 0 = success exit
    32 00000040 0F05                        syscall                 ; quit 
